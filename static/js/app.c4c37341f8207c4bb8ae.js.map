{"version":3,"sources":["webpack:///./src/bus.js","webpack:///./src/util/shaders/complex.glsl","webpack:///./src/util/gl-utils.js","webpack:///./src/appState.js","webpack:///./src/util/shaders/getFragmentCode.js","webpack:///./src/util/request.js","webpack:///./src/editor/getParsedShaderFunction.js","webpack:///./src/util/shaders/main.glsl","webpack:///./src/editor/shaderCodeState.js","webpack:///./src/scene.js","webpack:///./src/util/shaders/bezier.glsl","webpack:///./src/util/isSmallScreen.js","webpack:///./src/editor/pragmaParser.js","webpack:///./src/util/createShaders.js","webpack:///./src/editor/fetchGLSL.js","webpack:///./src/nativeMain.js"],"names":["eventify","__webpack_require__","module","exports","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","bindTexture","texture","unit","activeTexture","TEXTURE0","TEXTURE_2D","createBuffer","data","buffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","bindAttribute","attribute","numComponents","enableVertexAttribArray","vertexAttribPointer","FLOAT","createProgram","vertexSource","fragmentSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","i","wrapper","unload","deleteProgram","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","name","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","createTexture","image","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","pendingSaveCallback","queryState","bus","isSmallScreen","qs","useSearch","currentState","get","defaultCode","hasCode","settingsPanel","collapsed","hideUI","undefined","saveCode","code","set","fc","getCode","fCode","getDefaultCode","saveTransform","tx","ty","scale","clearTimeout","setTimeout","getVisibleRectangle","sceneWidth","sceneHeight","Number","isFinite","left","top","right","bottom","onChange","fire","window","scene","complexLibrary","bezier","main","url","options","Promise","resolve","reject","req","XMLHttpRequest","progress","addEventListener","e","lengthComputable","loaded","total","percent","status","response","responseType","JSON","parse","open","send","pragmaParse","getFragmentCode","glslParser","check","log","errorCount","whitespace","length","Array","join","then","bind","catch","oe","shaderCode","libAndCode","pragmaParseResult","error","parsedCode","parserResult","diag","diagnostics","firstError","range","lineColumn","offset","_lineOffsets","line","contents","substr","column","substring","start","end","prefix","diagText","text","errorDetail","isFloatError","indexOf","parserError","appState","getParsedShaderFunction","updateCode","on","parseCode","persistedCode","currentShaderVersion","currentShaderCode","trySetNewCode","result","console","api","setCode","cancelled","updateErrorInfo","dispose","off","customCode","currentResult","capturedVersion","message","makePanzoom","createShaderCodeState","util","createShaders","HIDE_UI_THRESHOLD","canvas","startTime","getContext","cursor","currentX","currentY","clickX","clickY","currentFrameNumber","sceneTransform","x","y","z","clientWidth","clientHeight","panzoom","realPinch","zoomSpeed","controller","applyTransform","getOwner","restorePanzoom","nextAnimationFrame","lastActiveIntervalId","requestSizeUpdate","requestTransformUpdate","lastActivityTime","Date","updateSize","onMouseMove","onMouseClick","onTouchStart","onTouchMove","activate","setActivityMonitorEnabled","screenProgram","quadBuffer","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","state","isActive","codeEditorState","updateProgram","performance","now","Float32Array","a_pos","scheduleNextFrame","goToOrigin","showRectangle","innerWidth","innerHeight","getTransform","removeEventListener","cancelAnimationFrame","animate","clear","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","useProgram","viewport","uniform2f","iResolution","uniform3f","u_transform","iTime","uniform1f","iFrame","uniform4f","iMouse","drawArrays","TRIANGLES","drawCurrentFrame","requestAnimationFrame","newTransform","rect","markInactiveIfNeeded","enabled","setInterval","clearInterval","firstTouch","touches","setClick","clientX","clientY","setHover","ex","ey","width","height","fetchGLSL","pragmaInclude","defineInclude","nullCode","parsedLines","pending","lines","split","outputLines","currentIndex","substitutes","Map","forEach","index","push","include","insertIndex","matches","match","processPragma","size","replacement","key","replace","RegExp","replaceDefines","processLineByLine","all","loadedLinks","request","link","trimmed","trim","cachedResponse","initScene","document","getElementById","ctxOptions","antialias","webGLEnabled","initPixelPlay"],"mappings":"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","file":"static/js/app.c4c37341f8207c4bb8ae.js","sourcesContent":["/**\n * This is a simple way to pass messages between application components.\n */\nvar eventify = require('ngraph.events');\n\nmodule.exports = eventify({});\n\n\n// WEBPACK FOOTER //\n// ./src/bus.js","module.exports = \"// based on https://github.com/rust-num/num-complex/blob/master/src/lib.rs\\n// Copyright 2013 The Rust Project Developers. MIT license\\n// Ported to GLSL by Andrei Kashcha (github.com/anvaka), available under MIT license as well.\\nfloat cosh(float val) {\\n  float tmp = exp(val);\\n  return (tmp + 1.0 / tmp) / 2.0;\\n}\\n \\nfloat tanh(float val) {\\n  float tmp = exp(val);\\n  return (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\\n}\\n \\nfloat sinh(float val) {\\n  float tmp = exp(val);\\n  return (tmp - 1.0 / tmp) / 2.0;\\n}\\n\\nvec2 cosh(vec2 val) {\\n  vec2 tmp = exp(val);\\n  return(tmp + 1.0 / tmp) / 2.0;\\n}\\n \\nvec2 tanh(vec2 val) {\\n  vec2 tmp = exp(val);\\n  return (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\\n}\\n \\nvec2 sinh(vec2 val) {\\n  vec2 tmp = exp(val);\\n  return (tmp - 1.0 / tmp) / 2.0;\\n}\\n\\nvec2 c_one() { return vec2(1., 0.); }\\nvec2 c_i() { return vec2(0., 1.); }\\n\\nfloat arg(vec2 c) {\\n  return atan(c.y, c.x);\\n}\\n\\nvec2 c_conj(vec2 c) {\\n  return vec2(c.x, -c.y);\\n}\\n\\nvec2 c_from_polar(float r, float theta) {\\n  return vec2(r * cos(theta), r * sin(theta));\\n}\\n\\nvec2 c_to_polar(vec2 c) {\\n  return vec2(length(c), atan(c.y, c.x));\\n}\\n\\n/// Computes `e^(c)`, where `e` is the base of the natural logarithm.\\nvec2 c_exp(vec2 c) {\\n  return c_from_polar(exp(c.x), c.y);\\n}\\n\\n\\n/// Raises a floating point number to the complex power `c`.\\nvec2 c_exp(float base, vec2 c) {\\n  return c_from_polar(pow(base, c.x), c.y * log(base));\\n}\\n\\n/// Computes the principal value of natural logarithm of `c`.\\nvec2 c_ln(vec2 c) {\\n  vec2 polar = c_to_polar(c);\\n  return vec2(log(polar.x), polar.y);\\n}\\n\\n/// Returns the logarithm of `c` with respect to an arbitrary base.\\nvec2 c_log(vec2 c, float base) {\\n  vec2 polar = c_to_polar(c);\\n  return vec2(log(polar.r), polar.y) / log(base);\\n}\\n\\nvec2 c_sqrt(vec2 c) {\\n  vec2 p = c_to_polar(c);\\n  return c_from_polar(sqrt(p.x), p.y/2.);\\n}\\n\\n/// Raises `c` to a floating point power `e`.\\nvec2 c_pow(vec2 c, float e) {\\n  vec2 p = c_to_polar(c);\\n  return c_from_polar(pow(p.x, e), p.y*e);\\n}\\n\\n/// Raises `c` to a complex power `e`.\\nvec2 c_pow(vec2 c, vec2 e) {\\n  vec2 polar = c_to_polar(c);\\n  return c_from_polar(\\n     pow(polar.x, e.x) * exp(-e.y * polar.y),\\n     e.x * polar.y + e.y * log(polar.x)\\n  );\\n}\\n\\nvec2 c_mul(vec2 self, vec2 other) {\\n    return vec2(self.x * other.x - self.y * other.y, \\n                self.x * other.y + self.y * other.x);\\n}\\n\\nvec2 c_div(vec2 self, vec2 other) {\\n    float norm = length(other);\\n    return vec2(self.x * other.x + self.y * other.y,\\n                self.y * other.x - self.x * other.y)/(norm * norm);\\n}\\n\\nvec2 c_sin(vec2 c) {\\n  return vec2(sin(c.x) * cosh(c.y), cos(c.x) * sinh(c.y));\\n}\\n\\nvec2 c_cos(vec2 c) {\\n  // formula: cos(a + bi) = cos(a)cosh(b) - i*sin(a)sinh(b)\\n  return vec2(cos(c.x) * cosh(c.y), -sin(c.x) * sinh(c.y));\\n}\\n\\nvec2 c_tan(vec2 c) {\\n  vec2 c2 = 2. * c;\\n  return vec2(sin(c2.x), sinh(c2.y))/(cos(c2.x) + cosh(c2.y));\\n}\\n\\nvec2 c_atan(vec2 c) {\\n  // formula: arctan(z) = (ln(1+iz) - ln(1-iz))/(2i)\\n  vec2 i = c_i();\\n  vec2 one = c_one();\\n  vec2 two = one + one;\\n  if (c == i) {\\n    return vec2(0., 1./0.0);\\n  } else if (c == -i) {\\n    return vec2(0., -1./0.0);\\n  }\\n\\n  return c_div(\\n    c_ln(one + c_mul(i, c)) - c_ln(one - c_mul(i, c)),\\n    c_mul(two, i)\\n  );\\n}\\n\\nvec2 c_asin(vec2 c) {\\n // formula: arcsin(z) = -i ln(sqrt(1-z^2) + iz)\\n  vec2 i = c_i(); vec2 one = c_one();\\n  return c_mul(-i, c_ln(\\n    c_sqrt(c_one() - c_mul(c, c)) + c_mul(i, c)\\n  ));\\n}\\n\\nvec2 c_acos(vec2 c) {\\n  // formula: arccos(z) = -i ln(i sqrt(1-z^2) + z)\\n  vec2 i = c_i();\\n\\n  return c_mul(-i, c_ln(\\n    c_mul(i, c_sqrt(c_one() - c_mul(c, c))) + c\\n  ));\\n}\\n\\nvec2 c_sinh(vec2 c) {\\n  return vec2(sinh(c.x) * cos(c.y), cosh(c.x) * sin(c.y));\\n}\\n\\nvec2 c_cosh(vec2 c) {\\n  return vec2(cosh(c.x) * cos(c.y), sinh(c.x) * sin(c.y));\\n}\\n\\nvec2 c_tanh(vec2 c) {\\n  vec2 c2 = 2. * c;\\n  return vec2(sinh(c2.x), sin(c2.y))/(cosh(c2.x) + cos(c2.y));\\n}\\n\\nvec2 c_asinh(vec2 c) {\\n  // formula: arcsinh(z) = ln(z + sqrt(1+z^2))\\n  vec2 one = c_one();\\n  return c_ln(c + c_sqrt(one + c_mul(c, c)));\\n}\\n\\nvec2 c_acosh(vec2 c) {\\n  // formula: arccosh(z) = 2 ln(sqrt((z+1)/2) + sqrt((z-1)/2))\\n  vec2 one = c_one();\\n  vec2 two = one + one;\\n  return c_mul(two,\\n      c_ln(\\n        c_sqrt(c_div((c + one), two)) + c_sqrt(c_div((c - one), two))\\n      ));\\n}\\n\\nvec2 c_atanh(vec2 c) {\\n  // formula: arctanh(z) = (ln(1+z) - ln(1-z))/2\\n  vec2 one = c_one();\\n  vec2 two = one + one;\\n  if (c == one) {\\n      return vec2(1./0., vec2(0.));\\n  } else if (c == -one) {\\n      return vec2(-1./0., vec2(0.));\\n  }\\n  return c_div(c_ln(one + c) - c_ln(one - c), two);\\n}\\n\\n// Attempts to identify the gaussian integer whose product with `modulus`\\n// is closest to `c`\\nvec2 c_rem(vec2 c, vec2 modulus) {\\n  vec2 c0 = c_div(c, modulus);\\n  // This is the gaussian integer corresponding to the true ratio\\n  // rounded towards zero.\\n  vec2 c1 = vec2(c0.x - mod(c0.x, 1.), c0.y - mod(c0.y, 1.));\\n  return c - c_mul(modulus, c1);\\n}\\n\\nvec2 c_inv(vec2 c) {\\n  float norm = length(c);\\n\\treturn vec2(c.x, -c.y) / (norm * norm);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/shaders/complex.glsl\n// module id = 26+/\n// module chunks = 2","// Based on https://github.com/mapbox/webgl-wind\n// Licensed under ISC License Copyright (c) 2016, Mapbox\n// https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n\n// Adapted to my own needs here.\n\nmodule.exports = {\n  bindTexture: bindTexture,\n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  createProgram: createProgram,\n  createShader: createShader,\n  createTexture: createTexture\n}\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createTexture(gl, image) {\n  var texture = gl.createTexture();\n  var level = 0;\n  var internalFormat = gl.RGBA;\n  var srcFormat = gl.RGBA;\n  var srcType = gl.UNSIGNED_BYTE;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  return texture;\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(program, i);\n    wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper; \n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/gl-utils.js","/**\n * Okay, this file is a bit messy. Its primary responsibility\n * is to provide application state to scene and vue app. But it's\n * hard to define what application state mean in a clear way.\n * \n * For our purposes I consider anything stored in the query string to be\n * an application state\n */\nvar queryState = require('query-state');\nvar bus = require('./bus');\nvar isSmallScreen = require('./util/isSmallScreen');\n\n// This will load current state from the query string.\nvar qs = queryState({}, { useSearch: true, });\nvar currentState = qs.get();\n\nvar defaultCode = require('./util/shaders/main.glsl');\n\n// When user drags the scene, we don't want to immediately update the\n// query string. Some browsers would not respond well to high intensity.\n// Instead we debounce events (setTimeout, and clearTimeout if new events comes\n// before previously scheduled timeout is executed)\nvar pendingSaveCallback;\n\nmodule.exports = {\n  settingsPanel: {\n    // By default we will not show settings panel on small screen, or if\n    // there was a code in the query string - we just assume people want to\n    // see the result. If they are curious - they would click \"show editor\" button\n    collapsed: isSmallScreen() || hasCode(),\n  },\n  // If this one is present, the no UI will ever be shown. Good for iframe embedding\n  hideUI: qs.get('hide-ui') !== undefined,\n\n  /**\n   * Request to save current code into query string\n   */\n  saveCode,\n\n  /**\n   * Checks whether query string has code.\n   */\n  hasCode,\n\n  /**\n   * Gets current code. Returns default code if no current code is present.\n   */\n  getCode,\n\n  /**\n   * Returns our default code\n   */\n  getDefaultCode,\n\n  /**\n   * Saves scene transform.\n   */\n  saveTransform,\n\n  /**\n   * Returns visible rectangle in screen coordinates.\n   */\n  getVisibleRectangle\n}\n\nfunction hasCode() {\n  return !!qs.get('fc');\n}\n\nfunction saveTransform(tx, ty, scale){\n  if (pendingSaveCallback) {\n    clearTimeout(pendingSaveCallback);\n  }\n\n  pendingSaveCallback = setTimeout(() => {\n    pendingSaveCallback = 0;\n    qs.set({ tx, ty,scale });\n  }, 300);\n}\n\nfunction getVisibleRectangle(sceneWidth, sceneHeight) {\n  var tx = qs.get('tx');\n  var ty = qs.get('ty');\n  var scale = qs.get('scale');\n  if (!(Number.isFinite(tx) || Number.isFinite(ty) || Number.isFinite(scale))) return;\n\n  return ({\n    left: -tx * sceneWidth/scale,\n    top: -ty * sceneHeight/scale,\n    right: -tx * sceneWidth/scale + sceneWidth/scale,\n    bottom: -ty * sceneHeight/scale + sceneHeight/scale,\n  })\n}\n\nqs.onChange(function() {\n  // This is need to back propagate properties when query string changes.\n  bus.fire('scene-ready', window.scene);\n});\n\nfunction getCode() {\n  var fCode = qs.get('fc');\n  if (fCode) return fCode;\n\n  return defaultCode;\n}\n\nfunction getDefaultCode() {\n  return defaultCode;\n}\n\nfunction saveCode(code) {\n  qs.set({fc: code});\n  currentState.code = code;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/appState.js","var complexLibrary = require('./complex.glsl');\nvar bezier = require('./bezier.glsl');\n\nmodule.exports = function getFragmentCode(main) {\n  var fragmentShader = `\nprecision highp float;\nuniform float iFrame;\nuniform float iTime;\nuniform vec4 iMouse;\nuniform vec3 u_transform;\nuniform vec2 iResolution;\nvarying vec2 v_tex_pos;\n\nvec2 screen2scene(vec2 pos) {\n  pos /= iResolution.xy;\n  float ar = (iResolution.x/iResolution.y);\n  vec2 vt = 2.*(pos - u_transform.xy)/u_transform.z;\n  return vec2(ar*(vt.x - 1.), 1. - vt.y);\n}\n\n${bezier}\n${complexLibrary}\n${main}\n\nvoid main() {\n  float ar = iResolution.x / iResolution.y;\n  gl_FragColor = get_color(vec2(v_tex_pos.x * ar, v_tex_pos.y));\n}\n`;\nreturn fragmentShader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/shaders/getFragmentCode.js","/**\n * XMLHttpRequest wrapped into a promise.\n * \n * @param {String} url \n */\nmodule.exports = function request(url, options) {\n  if (!options) options = {};\n\n  return new Promise(download);\n\n  function download(resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    if (typeof options.progress === 'function') {\n      req.addEventListener('progress', updateProgress, false);\n    }\n\n    req.addEventListener('load', transferComplete, false);\n    req.addEventListener('error', transferFailed, false);\n    req.addEventListener('abort', transferCanceled, false);\n\n    req.open('GET', url);\n    if (options.responseType) {\n      req.responseType = options.responseType;\n    }\n    req.send(null);\n\n    function updateProgress(e) {\n      if (e.lengthComputable) {\n        options.progress({\n          loaded: e.loaded,\n          total: e.total,\n          percent: e.loaded / e.total\n        });\n      }\n    }\n\n    function transferComplete() {\n      if (req.status !== 200) {\n        reject(`Unexpected status code ${req.status} when calling ${url}`);\n        return;\n      }\n      var response = req.response;\n\n      if (options.responseType === 'json' && typeof response === 'string') {\n        // IE\n        response = JSON.parse(response);\n      }\n\n      resolve(response);\n    }\n\n    function transferFailed() {\n      reject(`Failed to download ${url}`);\n    }\n\n    function transferCanceled() {\n      reject(`Cancelled download of ${url}`);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.js","/**\n * This module parses user defined shader code.\n */\n\nvar bus = require('../bus');\nvar pragmaParse = require('./pragmaParser');\nvar getFragmentCode = require('../util/shaders/getFragmentCode');\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check(code) {\n    return {\n      code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\nrequire.ensure('glsl-parser', () => {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = require('glsl-parser');\n\n  // notify interested parties, so that they can recheck code if they wish.\n  bus.fire('glsl-parser-ready'); \n});\n\n/**\n * Given a string, verifies that it is a valid glsl code,\n * and then returns code + log.\n * \n * @param {String} shaderCode \n */\nmodule.exports = function getParsedShaderFunction(shaderCode) {\n  var libAndCode = getFragmentCode(shaderCode);\n\n  return pragmaParse(libAndCode).then(pragmaParseResult => {\n    if (pragmaParseResult.error) {\n      return pragmaParseResult;\n    }\n\n    var parsedCode = pragmaParseResult.getCode();\n\n    var parserResult = glslParser.check(parsedCode); //{ globals: complexGlobals });\n    parserResult.code = parsedCode;\n    parserResult.main = shaderCode;\n\n    if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n    return parserResult;\n  });\n}\n\nfunction parserError(log) {\n  let diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors are 0, warnings are 1)\n  let firstError = diag.range;\n  let lineColumn = firstError.lineColumn();\n  let source = firstError.source;\n  let offset = source._lineOffsets[lineColumn.line]\n  let line = source.contents.substr(offset,  lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  let prefix = 'Line ' + lineColumn.line + ': ';\n  let diagText = diag.text;\n  return {\n    error: \n      prefix + line + '\\n' +\n      whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 &&\n    diagText.indexOf('\"float\"')  > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/editor/getParsedShaderFunction.js","module.exports = \"vec4 get_color(vec2 p) {\\n  vec2 z = vec2(0.); float t = 0.;\\n\\n  for(int i = 0; i < 32; ++i) {\\n    if (length(z) > 2.) break;\\n    // main fractal loop. Change it:\\n    z = c_mul(z, z) + p;\\n    t = float(i);\\n  }\\n\\n  return length(z) * vec4(t/64., t/32., t/24., 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/shaders/main.glsl\n// module id = NAGP\n// module chunks = 2","var bus = require('../bus');\nvar appState = require('../appState');\nvar getParsedShaderFunction = require('./getParsedShaderFunction');\n\n/**\n * A text editor state for the shader. Manages shader\n * program compilation and error reporting state.\n *\n * @param {Function} updateCode - a callback that is called then code is validated\n * and found to be correct.\n */\nmodule.exports = function createShaderCodeState(updateCode) {\n  bus.on('glsl-parser-ready', parseCode);\n  var currentShaderVersion = 0;\n\n  // What is the current code?\n  var currentShaderCode = appState.getCode();\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  var api = {\n    getCode,\n    setCode,\n    dispose,\n\n    // These properties are for UI only\n    code: currentShaderCode,\n    error: '',\n    errorDetail: '',\n    isFloatError: false \n  };\n\n  return api;\n\n  function dispose() {\n    bus.off('glsl-parser-ready', parseCode);\n  }\n\n  function getCode() {\n    return appState.getCode();\n  }\n\n  function setCode(shaderCode) {\n    if (shaderCode === currentShaderCode) {\n      // If code hasn't changed, let's make sure that there was no previous\n      // error\n      if (parserResult && parserResult.error) {\n        // And if there was error, let's revalidate code:\n        parseCode();\n      }\n      return;\n    } \n\n    trySetNewCode(shaderCode).then((result) => {\n      if (result.cancelled) return;\n\n      if (result && result.error) {\n        updateErrorInfo(result.error);\n        return result;\n      }\n\n      currentShaderCode = shaderCode;\n      api.code = shaderCode;\n      appState.saveCode(shaderCode);\n    });\n  }\n\n  function updateErrorInfo(parserResult) {\n    if (parserResult && parserResult.error) {\n      api.error = parserResult.error;\n      api.errorDetail = parserResult.errorDetail;\n      api.isFloatError = parserResult.isFloatError;\n    } else {\n      api.error = '';\n      api.errorDetail = '';\n      api.isFloatError = false;\n    }\n  }\n\n  function loadCodeFromAppState() {\n    let persistedCode = appState.getCode();\n    if (persistedCode) {\n      trySetNewCode(persistedCode).then(result => {\n        if (!result.error) return; // This means we set correctly;\n        // If we get here - something went wrong. see the console\n        console.error('Failed to restore previous shader code: ', result.error);\n        // Let's use default code\n        trySetNewCode(appState.getDefaultCode());\n      });\n    } else {\n      // we want a default code\n      trySetNewCode(appState.getDefaultCode());\n    }\n  }\n\n  function parseCode(customCode) {\n    return getParsedShaderFunction(customCode || currentShaderCode)\n      .then(currentResult => {\n        parserResult = currentResult\n        updateErrorInfo(parserResult.error);\n        return parserResult;\n      });\n  }\n\n  function trySetNewCode(shaderCode) {\n    currentShaderVersion += 1;\n    var capturedVersion = currentShaderVersion;\n    // step 1 - run through parser\n    return parseCode(shaderCode).then((parserResult) => {\n      if (capturedVersion !== currentShaderVersion) {\n        parserResult.cancelled = true;\n        // a newer request was issued. Ignore these results.\n        return parserResult;\n      }\n\n      if (parserResult.error) {\n        return parserResult;\n      }\n      // step 2 - run through real webgl\n      try {\n        updateCode(parserResult);\n        return parserResult;\n      } catch (e) {\n        return {\n          error: {\n            error: e.message\n          }\n        }\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/editor/shaderCodeState.js","/**\n * This is the main scene. It does not depend on vue application\n * and can be used as long as we have a canvas.\n * \n * Its main responsibility is to manage life cycle of the WebGL app\n */\nvar makePanzoom = require('panzoom');\nvar createShaderCodeState = require('./editor/shaderCodeState');\nvar bus = require('./bus');\nvar util = require('./util/gl-utils');\nvar createShaders = require('./util/createShaders');\nvar appState = require('./appState');\n\nvar HIDE_UI_THRESHOLD = 2500; // if nothing happens in this many milliseconds - hide ui\n\nmodule.exports = initScene;\n\nfunction initScene(canvas) {\n  var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  if (!gl) throw new Error('WebGL is not available');\n\n  // This is used to track seconds since application start time.\n  var startTime;\n  // Pass cursor to the shader as `iMouse`\n  var cursor = {currentX: 0, currentY: 0, clickX: 0, clickY: 0};\n  // Pass current frame number to shader as `iFrame`\n  var currentFrameNumber = 0;\n\n  // This will be updated by panzoom controller (see applyTransform)\n  var sceneTransform = {x: 0, y: 0, z: 1};\n  var sceneWidth = canvas.clientWidth;\n  var sceneHeight = canvas.clientHeight;\n\n  // Allow to pan and zoom the scene. The panzoom library\n  // manages user actions, and actual translation happens in the shader.\n  var panzoom = makePanzoom(gl.canvas, {\n    realPinch: true,\n    zoomSpeed: 0.035,\n    controller: {\n      applyTransform,\n      getOwner() { return gl.canvas; },\n    }\n  });\n\n  restorePanzoom(); // Let's load previous pan zoom state from query string\n\n  // Instead of blindly updating all gl properties, we queue them up\n  // and in the frame renderer we address changes.\n  var requestSizeUpdate = true;      // This means that screen size needs to be updated\n  var requestTransformUpdate = true; // And this means that transforms are dirty\n\n  // This is used to auto-hide UI when there is no input. We only do this\n  // when code editor is closed, and there was no user activity in HIDE_UI_THRESHOLD ms.\n  // TODO: This can be refactored into vue app. No need for it to be here...\n  var lastActivityTime = new Date();\n\n  // Handle for the next requestAnimationFrame call.\n  var nextAnimationFrame;\n  // Handle of of the interval that \"auto-hides\" UI when app is inactive.\n  var lastActiveIntervalId;\n  \n  // We pass a few things to the shader (like mouse pose), and we need to update\n  // transforms when window changes. So, we listen to relevant events here.\n  listenToEvents();\n\n  var shader = createShaders(appState.getCode());\n\n  gl.enable(gl.BLEND);\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n  gl.clearColor(0, 0, 0, 1); // Not sure if I need this\n  var screenProgram, quadBuffer;\n\n  // This is used by Vue app to communicate with the scene\n  var state = {\n    isActive: true,\n    // This is the main bit for the code. \n    // TODO: If someone wants to use scene independently, this needs to \n    // be less coupled with the application \n    codeEditorState: createShaderCodeState(updateCode),\n    goToOrigin,\n    setActivityMonitorEnabled,\n    dispose\n  };\n\n  // This is not very cool, okay?\n  window.scene = state;\n\n  return state; // That's it. The public part is over.\n\n  function animate() {\n    // TODO: Do I need this?\n    gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT);\n    nextAnimationFrame = 0;\n    drawCurrentFrame();\n    currentFrameNumber += 1;\n    scheduleNextFrame();\n  }\n\n  function drawCurrentFrame() {\n    gl.useProgram(screenProgram.program); \n\n    if (requestSizeUpdate) {\n      requestSizeUpdate = false;\n      gl.viewport(0, 0, sceneWidth, sceneHeight);\n      gl.uniform2f(screenProgram.iResolution, sceneWidth, sceneHeight);\n    }\n\n    if (requestTransformUpdate) {\n      requestTransformUpdate = false;\n      gl.uniform3f(screenProgram.u_transform, sceneTransform.x, sceneTransform.y, sceneTransform.z);\n    }\n\n    var iTime = window.performance.now() - startTime;\n    gl.uniform1f(screenProgram.iTime, iTime/1000);\n    gl.uniform1f(screenProgram.iFrame, currentFrameNumber);\n    gl.uniform4f(screenProgram.iMouse, cursor.currentX, cursor.currentY, cursor.clickX, cursor.clickY);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  function scheduleNextFrame() {\n    if (nextAnimationFrame) return;\n    nextAnimationFrame = requestAnimationFrame(animate);\n  }\n\n  function updateCode(parserResult) {\n    // We first try to update the program. If there are any errors, this call will throw\n    // and they will be handled by the editor state.\n    var updateProgram = util.createProgram(gl, shader.vertexShader, parserResult.code);\n\n    // If we reach this code, then we didn't throw, and we have a valid webgl code.\n    // Let's unload what we have now.\n    if (screenProgram) screenProgram.unload();\n\n    // And re-initialize all primitives.\n    startTime = window.performance.now();\n    screenProgram = updateProgram;\n\n    quadBuffer = util.createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]));\n    util.bindAttribute(gl, quadBuffer, screenProgram.a_pos, 2);\n\n    requestSizeUpdate = true;\n    requestTransformUpdate = true;\n    \n    scheduleNextFrame();\n\n    bus.fire('scene-ready', window.scene);\n  }\n\n  // Technically the following three functions are all related to panzoom\n  // and could be extracted into own module.\n  function goToOrigin() {\n    panzoom.showRectangle({\n      left: 0, right: window.innerWidth,\n      top: 0, bottom: window.innerHeight\n    });\n    \n    applyTransform(panzoom.getTransform());\n  }\n\n  function applyTransform(newTransform) {\n    var tx = newTransform.x/sceneWidth;\n    var ty = newTransform.y/sceneHeight;\n    var scale = newTransform.scale;\n\n    sceneTransform.x = tx;\n    sceneTransform.y = ty; \n    sceneTransform.z = scale;\n    requestTransformUpdate = true;\n    appState.saveTransform(tx, ty, scale);\n    scheduleNextFrame();\n  }\n\n  function restorePanzoom() {\n    var rect = appState.getVisibleRectangle(sceneWidth, sceneHeight);\n    if (rect) panzoom.showRectangle(rect);\n  }\n\n  function markInactiveIfNeeded() {\n    var now = new Date();\n    if (now - lastActivityTime > HIDE_UI_THRESHOLD) state.isActive = false; \n  }\n\n  function setActivityMonitorEnabled(enabled) {\n    if (!enabled) {\n      clearInterval(lastActiveIntervalId);\n      lastActiveIntervalId = false;\n      state.isActive = true;\n    } else if (!lastActiveIntervalId) {\n      lastActiveIntervalId = setInterval(markInactiveIfNeeded, 2000);\n    }\n  }\n\n  function activate() {\n    // This will reset lastActivityTime to now, so that \n    // activity monitor can make correct predictions.\n    lastActivityTime = new Date();\n    state.isActive = true;\n  }\n\n  function dispose() {\n    panzoom.dispose();\n\n    window.removeEventListener('resize', updateSize);\n    window.removeEventListener('mousemove', onMouseMove, true);\n    window.removeEventListener('mousedown', onMouseClick, true);\n    window.removeEventListener('touchstart', onTouchStart, true);\n    window.removeEventListener('touchmove', onTouchMove, true);\n    window.removeEventListener('keydown', activate, true);\n\n    cancelAnimationFrame(nextAnimationFrame);\n    setActivityMonitorEnabled(false);\n    nextAnimationFrame = 0;\n  }\n\n  function listenToEvents() {\n    window.addEventListener('resize', updateSize);\n    window.addEventListener('mousemove', onMouseMove, true);\n    window.addEventListener('mousedown', onMouseClick, true);\n    window.addEventListener('touchstart', onTouchStart, true);\n    window.addEventListener('touchmove', onTouchMove, true);\n    window.addEventListener('keydown', activate, true);\n\n    // We don't want to hide UI if there is no old code.\n    if (appState.hasCode()) setActivityMonitorEnabled(true);\n  }\n\n  function onTouchStart(e) {\n    activate();\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n\n    setClick(firstTouch.clientX, firstTouch.clientY);\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onTouchMove(e) {\n    activate();\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onMouseMove(e) { setHover(e.clientX, e.clientY); activate(); }\n\n  function onMouseClick(e) { setClick(e.clientX, e.clientY); activate(); }\n\n  function setHover(ex, ey) {\n    cursor.currentX = ex;\n    cursor.currentY = ey;\n  }\n\n  function setClick(ex, ey) {\n    cursor.clickX = ex;\n    cursor.clickY = ey;\n  }\n\n  function updateSize() {\n    setSceneSize(window.innerWidth, window.innerHeight);\n  }\n\n  function setSceneSize(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n    sceneWidth = width;\n    sceneHeight = height;\n\n    restorePanzoom();\n    requestSizeUpdate = true;\n    scheduleNextFrame();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scene.js","module.exports = \"// If you are not familiar with bezier easing, see this\\n// http://cubic-bezier.com/#.17,.67,.83,.67\\nvec2 bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t) {\\n  float one_minus_t = 1. - t;\\n  return one_minus_t * one_minus_t * one_minus_t * p0 + \\n    3. * one_minus_t * one_minus_t * t * p1 + \\n    3. * one_minus_t * t * t * p2 +\\n    t * t * t * p3;\\n}\\n\\n// This one animates t, using control points p1 and p2.\\n// It is very similar to CSS based cubic-bezier timing funciton.\\nfloat bease(float t, vec2 p1, vec2 p2) {\\n  vec2 p0 = vec2(0.);\\n  vec2 p3 = vec2(1.);\\n  vec2 res = bezier(p0, p1, p2, p3, t);\\n  return res.y;\\n}\\n\\n// Produces a uniform value between 0 and 1 over `framesCount` frames\\nfloat timef(float framesCount) {\\n  return mod(iFrame,framesCount)/framesCount;\\n}\\n\\n// Not sure if I want to keep this.\\nfloat bease(float t) {\\n  return bease(t, vec2(0.42, 0), vec2(1));\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/shaders/bezier.glsl\n// module id = Wirq\n// module chunks = 2","module.exports = function isSmallScreen() {\n  return window.innerWidth < 600;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/isSmallScreen.js","var fetchGLSL = require('./fetchGLSL.js');\n\nvar pragmaInclude = '#include ';\nvar defineInclude = '#define ';\nvar nullCode = { code: '' }\n\n/**\n * Naively parses glsl code and tries to replace all `#pragma` statements\n * with empty string. Gives structured collection of pragma statements back\n * \n * @param {String} code \n */\nmodule.exports = function makePragmaParser(code) {\n  if (!code) return new Promise(resolve => resolve(nullCode));\n\n  var parsedLines = processLineByLine(code);\n  if (parsedLines.pending.length > 0) {\n    return Promise.all(parsedLines.pending).then(() => parsedLines)\n      .catch(error => { return {error: {error}}; });\n  }\n\n  return new Promise(resolve => resolve(parsedLines));\n}\n\nfunction processLineByLine(code) {\n  var pending = []\n  var lines = code.split('\\n');\n  var outputLines = [];\n  var currentIndex = 0;\n  var substitutes = new Map();\n\n  lines.forEach((line, index) => {\n    currentIndex = index;\n    if (line && line[0] === '#') {\n      outputLines.push('');\n      processPragma(line);\n    } else {\n      if (substitutes.size > 0) {\n        line = replaceDefines(line);\n      }\n      outputLines.push(line);\n    }\n  });\n\n  return {\n    getCode,\n    pending\n  };\n\n  function getCode() {\n    return outputLines.join('\\n');\n  }\n\n  function processPragma(line) {\n    if (line.indexOf(pragmaInclude) === 0) {\n      var include = line.substr(pragmaInclude.length);\n      var insertIndex = currentIndex;\n      pending.push(fetchGLSL(include).then(code => {\n        outputLines[insertIndex] = code\n      }))\n    } else if (line.indexOf(defineInclude) === 0) {\n      var matches = line.match(/#define\\s+([^\\s].+)\\s+(.+)$/)\n      substitutes.set(matches[1], matches[2]);\n    }\n  }\n\n  function replaceDefines(line) {\n    // Note: this is very fragile, I know. Feel free to improve it.\n    substitutes.forEach((replacement, key) => {\n      line = line.replace(new RegExp(key, 'g'), replacement);\n    });\n    return line;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/editor/pragmaParser.js","module.exports = createShaders;\n\nvar getFragmentCode = require('./shaders/getFragmentCode');\n\nfunction createShaders(main) {\n  return {\n    fragmentShader: getFragmentCode(main),\n    vertexShader: `\nprecision highp float;\nattribute vec2 a_pos;\n\nuniform float iFrame;\nuniform float iTime;\nuniform vec4 iMouse;\nuniform vec2 iResolution;\nuniform vec3 u_transform;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n  vec2 vt = 2.*(a_pos - u_transform.xy)/u_transform.z;\n  v_tex_pos = vec2(vt.x - 1., 1. - vt.y);\n  vec2 vv = vec2(2. * a_pos.x - 1., 1. - 2.*a_pos.y);\n  gl_Position = vec4(vv, 0, 1);\n}    \n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/createShaders.js","var loadedLinks = new Map(); // from link to response\nvar request = require('../util/request');\n\nmodule.exports = function fetchGLSL(link) {\n  if (!link) return Promise.reject('Missing link')\n  var trimmed = link.trim();\n  if (!trimmed) return Promise.reject('Missing link');\n\n  let cachedResponse = loadedLinks.get(trimmed)\n  if (cachedResponse) return Promise.resolve(cachedResponse);\n\n  return request(link).then(code => {\n    loadedLinks.set(link, code);\n    return code;\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/editor/fetchGLSL.js","/**\n * This is the main entry point into the application. It initializes\n * scene first, and then asynchronously loads Vue app \n */\nvar initScene = require('./scene');\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initPixelPlay(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/mainVue.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/mainVue.js');\n});\n\nfunction initPixelPlay(canvas) {\n  var width = window.innerWidth;\n  var height = window.innerHeight;\n  canvas.width = width;\n  canvas.height =  height;\n  var ctxOptions = {antialias: false};\n\n  var gl = canvas.getContext('webgl', ctxOptions) ||\n          canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = initScene(canvas);\n    window.scene = scene;\n  } else {\n    // The Vue App will notify error later, when loaded.\n    window.webGLEnabled = false;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nativeMain.js"],"sourceRoot":""}